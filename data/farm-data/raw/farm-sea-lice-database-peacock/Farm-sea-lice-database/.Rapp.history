indStat<-which(dat1$Comments=="statistical agreement with")
indStat
dat1$Comments[indStat-1]<-paste(as.character(strftime(as.Date(as.numeric(dat1$Comments[indStat-1]), origin="1899-12-30"), format="%d-%m-%Y")), dat1$Comments[indStat], dat1$Comments[indStat+1], sep=" ")#
			dat1$Comments[c(indStat, indStat+1)]<-NA
dat1$Comments
dat1$Comments[c(indStat, indStat+1)]
indPrec<-which(dat1$Comments=="Counts precluded by"|dat1$Comments=="Count precluded by")
dat1$Comments[indPrec]
paste(dat1$Comments[indPrec], dat1$Comments[indPrec+1], sep=" ")
indPrec<-which(dat1$Comments=="Counts precluded by"|dat1$Comments=="Count precluded by")#
			dat1$Comments[indPrec]<-paste(dat1$Comments[indPrec], dat1$Comments[indPrec+1], sep=" ")#
			dat1$Comments[indPrec+1]<-NA
dat1$Comments
indProf<-which(dat1$Comments=="Lice counting proficiency demonstrated by farm staff")
indProf
dat1[30:34,]
which(is.na(dat1$Site_common_name)==TRUE)
indNA<-which(is.na(dat1$Site_common_name)==TRUE)
indNA
for(m in 1:length(indNA)){#
				print(paste(dat1$Comments[indNA[m]], dat1$Comments[indNA[m]+1], sep=" "))#
				}
dat1<-dat[which(dat[,5]==c("January", "April", "July", "October")[j]):dim(dat)[1],]#
		# Add legible column names#
		names(dat1)<-c("Facility_reference_number", "License_holder", "Site_common_name", "Fish_health_zone", "Month", "Number_of_counts_performed", "L.salmonis_motile", "L.salmonis_motile_audit", "L.salmonis_female", "L.salmonis_female_aduit", "Chalimus", "Chalimus_audit", "Caligus", "Caligus_audit", "Comments", "Year_class")#
		# Cut <NA> rows at the bottom#
		if(sum(is.element(unique(dat1$License_holder), c(NA, "Cermaq", "Mainstream Canada", "Grieg Seafood", "Grieg", "Marine Harvest")))<length(unique(dat1$License_holder))) stop("License holder not matching") else maxLines<-max(which(is.element(dat1$License_holder, c("Mainstream Canada", "Grieg Seafood", "Marine Harvest", "Cermaq"))))#
		dat1<-dat1[1:maxLines,]	#
		# Infill months#
		monthInd<-which(is.na(dat1$Month)==FALSE)#
		if(length(monthInd)>3) stop("Problem with monthInd: more than three months") else{#
			dat1$Month[1:(monthInd[2]-1)]<-c("January", "April", "July", "October")[j]#
			dat1$Month[monthInd[2]:(monthInd[3]-1)]<-c("February", "May", "August", "November")[j]#
			dat1$Month[monthInd[3]:maxLines]<-c("March", "June", "September", "December")[j]#
			}#
		dat1<-dat1[-monthInd,] # Remove the month lines that are blank#
		# Infill zones#
		zoneInd<-which(is.na(dat1$Fish_health_zone)==FALSE)#
		for(m in 1:length(zoneInd)){#
			if(m==length(zoneInd)) dat1$Fish_health_zone[zoneInd[m]:(dim(dat1)[1])]<-dat1$Fish_health_zone[zoneInd[m]] else dat1$Fish_health_zone[zoneInd[m]:(zoneInd[m+1]-1)]<-dat1$Fish_health_zone[zoneInd[m]]#
			}#
		dat1<-dat1[-zoneInd,] #Remove the lines with just the zones#
		# There was a problem with the HTML files that some comments ended up in multiple cells#
		# Find these comments and make them one cell#
		dat1$Comments<-as.character(dat1$Comments)
indNA<-which(is.na(dat1$Site_common_name)==TRUE)#
			for(m in 1:length(indNA)){#
				print(paste(dat1$Comments[indNA[m]], dat1$Comments[indNA[m]+1], sep=" "))#
				}
dat1$Comments[indNA]
dat1[indNA,]
m=1
print(paste(dat1$Comments[indNA[m]], dat1$Comments[indNA[m]+1], sep=" "))
indNA
dat1[1:3,]
print(paste(dat1$Comments[indNA[m]-1], dat1$Comments[indNA[m]], sep=" "))
diff(indNA)
which(diff(indNA)>1)
indNA[c(1,which(diff(indNA)>1)+1)]
which(diff(indNA)==1)
indNA[c(1,which(diff(indNA)>1)+1)]
which(diffindNA==1)
which(diff(indNA)==1)
data.frame(index=indNA[c(1,which(diff(indNA)>1)+1)])
commentGaps$num.cells<-rep(2, dim(commentGaps)[1])
commentGaps<-data.frame(index=indNA[c(1,which(diff(indNA)>1)+1)])#
			commentGaps$num.cells<-rep(2, dim(commentGaps)[1])
commentGaps
m=1
dat1$Comments[commendGaps$index[m]]
dat1$Comments[commentGaps$index[m]]
dat1$Comments[commentGaps$index[m]+1]
dat1$Comments[commentGaps$index[m]+2]
dat1$Site_common_name[commentGaps$index[m]]
dat1$Site_common_name[commentGaps$index[m]+1]
dat1$Site_common_name[commentGaps$index[m]]
dat1$Site_common_name[commentGaps$index[m]+2]
dat1$Site_common_name[commentGaps$index[m]+3]
indNA<-which(is.na(dat1$Site_common_name)==TRUE)#
			commentGaps<-data.frame(index=indNA[c(1,which(diff(indNA)>1)+1)])#
			commentGaps$num.cells<-rep(2, dim(commentGaps)[1])#
			for(m in 1:dim(commentGaps)[1]){#
				if(is.na(dat1$Site_common_name[commentGaps$index[m]+1])==TRUE){#
					commentGaps$num.cells[m]<-3#
					if(is.na(dat1$Site_common_name[commentGaps$index[m]+2])==TRUE){#
						commentGaps$num.cells[m]<-3#
						if(is.na(dat1$Site_common_name[commentGaps$index[m]+3])==TRUE){#
							commentGaps$num.cells[m]<-4#
			}}}}
commentGaps
m=1
is.na(dat1$Site_common_name[indNA2[m]+1])==TRUE
indNA2<-indNA[c(1,which(diff(indNA)>1)+1)]
is.na(dat1$Site_common_name[indNA2[m]+1])==TRUE
is.na(dat1$Site_common_name[indNA2[m]+2])==TRUE
dat1$Comment[indNA[m]]
dat1$Comment[indNA[m]-1]
dat1$Comment[indNA[m]-1]
if(as.numeric(dat1$Comment[indNA[m]-1])>10)
as.numeric(dat1$Comment[indNA[m]-1])>10
dat1$Comment[indNA2]
m=4
dat1$Comment[indNA[m]-1]
m
dat1$Comment[indNA2[m]-1]
as.numeric(dat1$Comment[indNA2[m]-1])
is.na(as.numeric(dat1$Comment[indNA2[m]-1]))
as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")
m=1
as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")
paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], sep=" ")
dat1$Comment[indNA2[m]+c(0,1)]
is.na(dat1$Site_common_name[indNA2[m]+c(1,2)])
sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2)]))
sum(is.na(c(NA, NA)))
dat1$Comments
indNA<-which(is.na(dat1$Site_common_name)==TRUE)
indNA
indNA2<-indNA[c(1,which(diff(indNA)>1)+1)]
indNA2
for(m in 1:length(indNA2)){#
			#---------#
			#If it's just one NA#
			if(is.na(dat1$Site_common_name[indNA2[m]+1])==FALSE){ #
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], sep=" ")#
				}#
				dat1$Comment[indNA[m]]<-NA#
			#-------#
			# if there are four NAs#
			}else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2,3)]))==3){ #
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], dat1$Comment[indNA2[m]+3], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], dat1$Comment[indNA2[m]+3], sep=" ")#
				}#
				dat1$Comment[indNA[m]+c(0,1,2,3)]<-NA#
			#-------#
			# if there are 3 NAs#
			} else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2)]))==2){ #
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], sep=" ")#
				}#
				dat1$Comment[indNA[m]+c(0,1,2)]<-NA#
			#-------#
			# if there are 2 NAs#
			} else if(is.na(dat1$Site_common_name[indNA2[m]+1])==TRUE){ # If there are 2 NAs#
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], sep=" ")#
				}#
				dat1$Comment[indNA[m]+c(0,1)]<-NA#
				}#
			}
warnings()
dat1$Comment
m
length(indNA2)
indNA2
m=22
is.na(dat1$Site_common_name[indNA2[m]+1])
sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2,3)]))==3
sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2)]))==2
is.na(dat1$Site_common_name[indNA2[m]+1])==TRUE
is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE
paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], sep=" ")
dat1$Comment[indNA[m]-1]
indNA[m]
m
dat1<-dat[which(dat[,5]==c("January", "April", "July", "October")[j]):dim(dat)[1],]#
		# Add legible column names#
		names(dat1)<-c("Facility_reference_number", "License_holder", "Site_common_name", "Fish_health_zone", "Month", "Number_of_counts_performed", "L.salmonis_motile", "L.salmonis_motile_audit", "L.salmonis_female", "L.salmonis_female_aduit", "Chalimus", "Chalimus_audit", "Caligus", "Caligus_audit", "Comments", "Year_class")#
		# Cut <NA> rows at the bottom#
		if(sum(is.element(unique(dat1$License_holder), c(NA, "Cermaq", "Mainstream Canada", "Grieg Seafood", "Grieg", "Marine Harvest")))<length(unique(dat1$License_holder))) stop("License holder not matching") else maxLines<-max(which(is.element(dat1$License_holder, c("Mainstream Canada", "Grieg Seafood", "Marine Harvest", "Cermaq"))))#
		dat1<-dat1[1:maxLines,]	#
		# Infill months#
		monthInd<-which(is.na(dat1$Month)==FALSE)#
		if(length(monthInd)>3) stop("Problem with monthInd: more than three months") else{#
			dat1$Month[1:(monthInd[2]-1)]<-c("January", "April", "July", "October")[j]#
			dat1$Month[monthInd[2]:(monthInd[3]-1)]<-c("February", "May", "August", "November")[j]#
			dat1$Month[monthInd[3]:maxLines]<-c("March", "June", "September", "December")[j]#
			}#
		dat1<-dat1[-monthInd,] # Remove the month lines that are blank#
		# Infill zones#
		zoneInd<-which(is.na(dat1$Fish_health_zone)==FALSE)#
		for(m in 1:length(zoneInd)){#
			if(m==length(zoneInd)) dat1$Fish_health_zone[zoneInd[m]:(dim(dat1)[1])]<-dat1$Fish_health_zone[zoneInd[m]] else dat1$Fish_health_zone[zoneInd[m]:(zoneInd[m+1]-1)]<-dat1$Fish_health_zone[zoneInd[m]]#
			}#
		dat1<-dat1[-zoneInd,] #Remove the lines with just the zones#
		# There was a problem with the HTML files that some comments ended up in multiple cells#
		# Find these comments and make them one cell#
		dat1$Comments<-as.character(dat1$Comments)#
		#Find gaps indicating comments spanning multipe rows#
		indNA<-which(is.na(dat1$Site_common_name)==TRUE)#
		# Select those indices that are the FIRST if there is a series of NAs#
		indNA2<-indNA[c(1,which(diff(indNA)>1)+1)]#
		for(m in 1:length(indNA2)){#
			#---------#
			#If it's just one NA#
			if(is.na(dat1$Site_common_name[indNA2[m]+1])==FALSE){ #
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], sep=" ")#
				}#
				dat1$Comment[indNA2[m]]<-NA#
			#-------#
			# if there are four NAs#
			}else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2,3)]))==3){ #
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], dat1$Comment[indNA2[m]+3], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], dat1$Comment[indNA2[m]+3], sep=" ")#
				}#
				dat1$Comment[indNA2[m]+c(0,1,2,3)]<-NA#
			#-------#
			# if there are 3 NAs#
			} else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2)]))==2){ #
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], sep=" ")#
				}#
				dat1$Comment[indNA2[m]+c(0,1,2)]<-NA#
			#-------#
			# if there are 2 NAs#
			} else if(is.na(dat1$Site_common_name[indNA2[m]+1])==TRUE){ # If there are 2 NAs#
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], sep=" ")#
				}#
				dat1$Comment[indNA2[m]+c(0,1)]<-NA#
				}#
			}
warnings()
dat1$Comment
naInd<-which(is.na(dat1$Site_common_name))
da1[naInd]
dat1[naInd,]
rm(list=ls())#
#
# Loop through each quarter ad extract data:#
#
for(i in 2013:2015){ #For each year#
	for(j in 1:4){# For each quarter#
		if(i<2014|(i==2014&j==1)){# If the data are available as an HTML file, the sheet is called Sheet1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Sheet1", colIndex=c(1:16))#
		}else{ #If the data are available as a pdf file, the sheet is called Table 1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Table 1", colIndex=c(1:16))#
		}#
		# No audit data for 2011-Q1, need to add columns#
		if(i==2011&j==1){#
			dat<-cbind(dat[,1:7], rep(NA, dim(dat)[1]), dat[,8], rep(NA, dim(dat)[1]), dat[,9], rep(NA, dim(dat)[1]), dat[,10], rep(NA, dim(dat)[1]), dat[,11:12])#
		}#
		# Cut the extra info in the header#
		dat1<-dat[which(dat[,5]==c("January", "April", "July", "October")[j]):dim(dat)[1],]#
		# Add legible column names#
		names(dat1)<-c("Facility_reference_number", "License_holder", "Site_common_name", "Fish_health_zone", "Month", "Number_of_counts_performed", "L.salmonis_motile", "L.salmonis_motile_audit", "L.salmonis_female", "L.salmonis_female_aduit", "Chalimus", "Chalimus_audit", "Caligus", "Caligus_audit", "Comments", "Year_class")#
		# Cut <NA> rows at the bottom#
		if(sum(is.element(unique(dat1$License_holder), c(NA, "Cermaq", "Mainstream Canada", "Grieg Seafood", "Grieg", "Marine Harvest")))<length(unique(dat1$License_holder))) stop("License holder not matching") else maxLines<-max(which(is.element(dat1$License_holder, c("Mainstream Canada", "Grieg Seafood", "Marine Harvest", "Cermaq"))))#
		dat1<-dat1[1:maxLines,]	#
		# Infill months#
		monthInd<-which(is.na(dat1$Month)==FALSE)#
		if(length(monthInd)>3) stop("Problem with monthInd: more than three months") else{#
			dat1$Month[1:(monthInd[2]-1)]<-c("January", "April", "July", "October")[j]#
			dat1$Month[monthInd[2]:(monthInd[3]-1)]<-c("February", "May", "August", "November")[j]#
			dat1$Month[monthInd[3]:maxLines]<-c("March", "June", "September", "December")[j]#
			}#
		dat1<-dat1[-monthInd,] # Remove the month lines that are blank#
		# Infill zones#
		zoneInd<-which(is.na(dat1$Fish_health_zone)==FALSE)#
		for(m in 1:length(zoneInd)){#
			if(m==length(zoneInd)) dat1$Fish_health_zone[zoneInd[m]:(dim(dat1)[1])]<-dat1$Fish_health_zone[zoneInd[m]] else dat1$Fish_health_zone[zoneInd[m]:(zoneInd[m+1]-1)]<-dat1$Fish_health_zone[zoneInd[m]]#
			}#
		dat1<-dat1[-zoneInd,] #Remove the lines with just the zones#
		# There was a problem with the HTML files that some comments ended up in multiple cells#
		# Find these comments and make them one cell#
		dat1$Comments<-as.character(dat1$Comments)#
		#Find gaps indicating comments spanning multipe rows#
		indNA<-which(is.na(dat1$Site_common_name)==TRUE)#
		# Select those indices that are the FIRST if there is a series of NAs#
		indNA2<-indNA[c(1,which(diff(indNA)>1)+1)]#
		for(m in 1:length(indNA2)){#
			#---------#
			#If it's just one NA#
			if(is.na(dat1$Site_common_name[indNA2[m]+1])==FALSE){ #
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], sep=" ")#
				}#
				dat1$Comment[indNA2[m]]<-NA#
			#-------#
			# if there are four NAs#
			}else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2,3)]))==3){ #
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], dat1$Comment[indNA2[m]+3], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], dat1$Comment[indNA2[m]+3], sep=" ")#
				}#
				dat1$Comment[indNA2[m]+c(0,1,2,3)]<-NA#
			#-------#
			# if there are 3 NAs#
			} else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2)]))==2){ #
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], sep=" ")#
				}#
				dat1$Comment[indNA2[m]+c(0,1,2)]<-NA#
			#-------#
			# if there are 2 NAs#
			} else if(is.na(dat1$Site_common_name[indNA2[m]+1])==TRUE){ # If there are 2 NAs#
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], sep=" ")#
				}#
				dat1$Comment[indNA2[m]+c(0,1)]<-NA#
				}#
			}#
		# Remove NA lines within data#
		naInd<-which(is.na(dat1$Site_common_name))#
		dat1<-dat1[-naInd]#
		# Compile dataframe#
		if(i==2011&j==1){ #If it's the first file in the dataset, start dataframe called allData,#
			allData<-dat1#
		}else{ # otherwise, add it to allData#
			allData<-rbind(allData, dat1)#
		}#
	} # end j#
} # end i
i
j
rm(list=ls())#
#
# Loop through each quarter ad extract data:#
#
for(i in 2011:2015){ #For each year#
	for(j in 1:4){# For each quarter#
		if(i<2014|(i==2014&j==1)){# If the data are available as an HTML file, the sheet is called Sheet1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Sheet1", colIndex=c(1:16))#
		}else{ #If the data are available as a pdf file, the sheet is called Table 1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Table 1", colIndex=c(1:16))#
		}#
		# No audit data for 2011-Q1, need to add columns#
		if(i==2011&j==1){#
			dat<-cbind(dat[,1:7], rep(NA, dim(dat)[1]), dat[,8], rep(NA, dim(dat)[1]), dat[,9], rep(NA, dim(dat)[1]), dat[,10], rep(NA, dim(dat)[1]), dat[,11:12])#
		}#
		# Cut the extra info in the header#
		dat1<-dat[which(dat[,5]==c("January", "April", "July", "October")[j]):dim(dat)[1],]#
		# Add legible column names#
		names(dat1)<-c("Facility_reference_number", "License_holder", "Site_common_name", "Fish_health_zone", "Month", "Number_of_counts_performed", "L.salmonis_motile", "L.salmonis_motile_audit", "L.salmonis_female", "L.salmonis_female_aduit", "Chalimus", "Chalimus_audit", "Caligus", "Caligus_audit", "Comments", "Year_class")#
		# Cut <NA> rows at the bottom#
		if(sum(is.element(unique(dat1$License_holder), c(NA, "Cermaq", "Mainstream Canada", "Grieg Seafood", "Grieg", "Marine Harvest")))<length(unique(dat1$License_holder))) stop("License holder not matching") else maxLines<-max(which(is.element(dat1$License_holder, c("Mainstream Canada", "Grieg Seafood", "Marine Harvest", "Cermaq"))))#
		dat1<-dat1[1:maxLines,]	#
		# Infill months#
		monthInd<-which(is.na(dat1$Month)==FALSE)#
		if(length(monthInd)>3) stop("Problem with monthInd: more than three months") else{#
			dat1$Month[1:(monthInd[2]-1)]<-c("January", "April", "July", "October")[j]#
			dat1$Month[monthInd[2]:(monthInd[3]-1)]<-c("February", "May", "August", "November")[j]#
			dat1$Month[monthInd[3]:maxLines]<-c("March", "June", "September", "December")[j]#
			}#
		dat1<-dat1[-monthInd,] # Remove the month lines that are blank#
		# Infill zones#
		zoneInd<-which(is.na(dat1$Fish_health_zone)==FALSE)#
		for(m in 1:length(zoneInd)){#
			if(m==length(zoneInd)) dat1$Fish_health_zone[zoneInd[m]:(dim(dat1)[1])]<-dat1$Fish_health_zone[zoneInd[m]] else dat1$Fish_health_zone[zoneInd[m]:(zoneInd[m+1]-1)]<-dat1$Fish_health_zone[zoneInd[m]]#
			}#
		dat1<-dat1[-zoneInd,] #Remove the lines with just the zones#
		# There was a problem with the HTML files that some comments ended up in multiple cells#
		# Find these comments and make them one cell#
		dat1$Comments<-as.character(dat1$Comments)#
		#Find gaps indicating comments spanning multipe rows#
		indNA<-which(is.na(dat1$Site_common_name)==TRUE)#
		# Select those indices that are the FIRST if there is a series of NAs#
		indNA2<-indNA[c(1,which(diff(indNA)>1)+1)]#
		for(m in 1:length(indNA2)){#
			#---------#
			#If it's just one NA#
			if(is.na(dat1$Site_common_name[indNA2[m]+1])==FALSE){ #
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], sep=" ")#
				}#
				dat1$Comment[indNA2[m]]<-NA#
			#-------#
			# if there are four NAs#
			}else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2,3)]))==3){ #
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], dat1$Comment[indNA2[m]+3], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], dat1$Comment[indNA2[m]+3], sep=" ")#
				}#
				dat1$Comment[indNA2[m]+c(0,1,2,3)]<-NA#
			#-------#
			# if there are 3 NAs#
			} else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2)]))==2){ #
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], sep=" ")#
				}#
				dat1$Comment[indNA2[m]+c(0,1,2)]<-NA#
			#-------#
			# if there are 2 NAs#
			} else if(is.na(dat1$Site_common_name[indNA2[m]+1])==TRUE){ # If there are 2 NAs#
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], sep=" ")#
				}#
				dat1$Comment[indNA2[m]+c(0,1)]<-NA#
				}#
			}#
		# Remove NA lines within data#
		naInd<-which(is.na(dat1$Site_common_name))#
		dat1<-dat1[-naInd]#
		# Compile dataframe#
		if(i==2011&j==1){ #If it's the first file in the dataset, start dataframe called allData,#
			allData<-dat1#
		}else{ # otherwise, add it to allData#
			allData<-rbind(allData, dat1)#
		}#
	} # end j#
} # end i#
#
#write.csv()
i
j
rm(dat, dat1)
if(i<2014|(i==2014&j==1)){# If the data are available as an HTML file, the sheet is called Sheet1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Sheet1", colIndex=c(1:16))#
		}else{ #If the data are available as a pdf file, the sheet is called Table 1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Table 1", colIndex=c(1:16))#
		}#
		# No audit data for 2011-Q1, need to add columns#
		if(i==2011&j==1){#
			dat<-cbind(dat[,1:7], rep(NA, dim(dat)[1]), dat[,8], rep(NA, dim(dat)[1]), dat[,9], rep(NA, dim(dat)[1]), dat[,10], rep(NA, dim(dat)[1]), dat[,11:12])#
		}#
		# Cut the extra info in the header#
		dat1<-dat[which(dat[,5]==c("January", "April", "July", "October")[j]):dim(dat)[1],]#
		# Add legible column names#
		names(dat1)<-c("Facility_reference_number", "License_holder", "Site_common_name", "Fish_health_zone", "Month", "Number_of_counts_performed", "L.salmonis_motile", "L.salmonis_motile_audit", "L.salmonis_female", "L.salmonis_female_aduit", "Chalimus", "Chalimus_audit", "Caligus", "Caligus_audit", "Comments", "Year_class")#
		# Cut <NA> rows at the bottom#
		if(sum(is.element(unique(dat1$License_holder), c(NA, "Cermaq", "Mainstream Canada", "Grieg Seafood", "Grieg", "Marine Harvest")))<length(unique(dat1$License_holder))) stop("License holder not matching") else maxLines<-max(which(is.element(dat1$License_holder, c("Mainstream Canada", "Grieg Seafood", "Marine Harvest", "Cermaq"))))#
		dat1<-dat1[1:maxLines,]	#
		# Infill months#
		monthInd<-which(is.na(dat1$Month)==FALSE)#
		if(length(monthInd)>3) stop("Problem with monthInd: more than three months") else{#
			dat1$Month[1:(monthInd[2]-1)]<-c("January", "April", "July", "October")[j]#
			dat1$Month[monthInd[2]:(monthInd[3]-1)]<-c("February", "May", "August", "November")[j]#
			dat1$Month[monthInd[3]:maxLines]<-c("March", "June", "September", "December")[j]#
			}#
		dat1<-dat1[-monthInd,] # Remove the month lines that are blank#
		# Infill zones#
		zoneInd<-which(is.na(dat1$Fish_health_zone)==FALSE)#
		for(m in 1:length(zoneInd)){#
			if(m==length(zoneInd)) dat1$Fish_health_zone[zoneInd[m]:(dim(dat1)[1])]<-dat1$Fish_health_zone[zoneInd[m]] else dat1$Fish_health_zone[zoneInd[m]:(zoneInd[m+1]-1)]<-dat1$Fish_health_zone[zoneInd[m]]#
			}#
		dat1<-dat1[-zoneInd,] #Remove the lines with just the zones#
		# There was a problem with the HTML files that some comments ended up in multiple cells#
		# Find these comments and make them one cell#
		dat1$Comments<-as.character(dat1$Comments)
indNA<-which(is.na(dat1$Site_common_name)==TRUE)
dat1$Comments
diff(indNA)
indNA2<-indNA[c(1,which(diff(indNA)>1)+1)]
dat1$Comment[indNA2]
m=15
dat1$Comment[indNA2[m]]
indNA2<-indNA2[is.na(indNA2)==FALSE]
indNA2
for(m in 1:length(indNA2)){#
			#---------#
			#If it's just one NA#
			if(is.na(dat1$Site_common_name[indNA2[m]+1])==FALSE){ #
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], sep=" ")#
				}#
				dat1$Comment[indNA2[m]]<-NA#
			#-------#
			# if there are four NAs#
			}else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2,3)]))==3){ #
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], dat1$Comment[indNA2[m]+3], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], dat1$Comment[indNA2[m]+3], sep=" ")#
				}#
				dat1$Comment[indNA2[m]+c(0,1,2,3)]<-NA#
			#-------#
			# if there are 3 NAs#
			} else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2)]))==2){ #
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], sep=" ")#
				}#
				dat1$Comment[indNA2[m]+c(0,1,2)]<-NA#
			#-------#
			# if there are 2 NAs#
			} else if(is.na(dat1$Site_common_name[indNA2[m]+1])==TRUE){ # If there are 2 NAs#
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], sep=" ")#
				}#
				dat1$Comment[indNA2[m]+c(0,1)]<-NA#
				}
}
warnings()
dat1$Comment
naInd<-which(is.na(dat1$Site_common_name))#
		dat1<-dat1[-naInd]
dat1$Comment
rm(list=ls())#
#
# Loop through each quarter ad extract data:#
#
for(i in 2011:2015){ #For each year#
	for(j in 1:4){# For each quarter#
		if(i<2014|(i==2014&j==1)){# If the data are available as an HTML file, the sheet is called Sheet1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Sheet1", colIndex=c(1:16))#
		}else{ #If the data are available as a pdf file, the sheet is called Table 1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Table 1", colIndex=c(1:16))#
		}#
		# No audit data for 2011-Q1, need to add columns#
		if(i==2011&j==1){#
			dat<-cbind(dat[,1:7], rep(NA, dim(dat)[1]), dat[,8], rep(NA, dim(dat)[1]), dat[,9], rep(NA, dim(dat)[1]), dat[,10], rep(NA, dim(dat)[1]), dat[,11:12])#
		}#
		# Cut the extra info in the header#
		dat1<-dat[which(dat[,5]==c("January", "April", "July", "October")[j]):dim(dat)[1],]#
		# Add legible column names#
		names(dat1)<-c("Facility_reference_number", "License_holder", "Site_common_name", "Fish_health_zone", "Month", "Number_of_counts_performed", "L.salmonis_motile", "L.salmonis_motile_audit", "L.salmonis_female", "L.salmonis_female_aduit", "Chalimus", "Chalimus_audit", "Caligus", "Caligus_audit", "Comments", "Year_class")#
		# Cut <NA> rows at the bottom#
		if(sum(is.element(unique(dat1$License_holder), c(NA, "Cermaq", "Mainstream Canada", "Grieg Seafood", "Grieg", "Marine Harvest")))<length(unique(dat1$License_holder))) stop("License holder not matching") else maxLines<-max(which(is.element(dat1$License_holder, c("Mainstream Canada", "Grieg Seafood", "Marine Harvest", "Cermaq"))))#
		dat1<-dat1[1:maxLines,]	#
		# Infill months#
		monthInd<-which(is.na(dat1$Month)==FALSE)#
		if(length(monthInd)>3) stop("Problem with monthInd: more than three months") else{#
			dat1$Month[1:(monthInd[2]-1)]<-c("January", "April", "July", "October")[j]#
			dat1$Month[monthInd[2]:(monthInd[3]-1)]<-c("February", "May", "August", "November")[j]#
			dat1$Month[monthInd[3]:maxLines]<-c("March", "June", "September", "December")[j]#
			}#
		dat1<-dat1[-monthInd,] # Remove the month lines that are blank#
		# Infill zones#
		zoneInd<-which(is.na(dat1$Fish_health_zone)==FALSE)#
		for(m in 1:length(zoneInd)){#
			if(m==length(zoneInd)) dat1$Fish_health_zone[zoneInd[m]:(dim(dat1)[1])]<-dat1$Fish_health_zone[zoneInd[m]] else dat1$Fish_health_zone[zoneInd[m]:(zoneInd[m+1]-1)]<-dat1$Fish_health_zone[zoneInd[m]]#
			}#
		dat1<-dat1[-zoneInd,] #Remove the lines with just the zones#
		# There was a problem with the HTML files that some comments ended up in multiple cells#
		# Find these comments and make them one cell#
		dat1$Comments<-as.character(dat1$Comments)#
		#Find gaps indicating comments spanning multipe rows#
		indNA<-which(is.na(dat1$Site_common_name)==TRUE)#
		# Select those indices that are the FIRST if there is a series of NAs#
		indNA2<-indNA[c(1,which(diff(indNA)>1)+1)]#
		# If the comment is NA, then it's just a dummy row and can be removed#
		indNA2<-indNA2[is.na(indNA2)==FALSE]#
		for(m in 1:length(indNA2)){#
			#---------#
			#If it's just one NA#
			if(is.na(dat1$Site_common_name[indNA2[m]+1])==FALSE){ #
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], sep=" ")#
				}#
				dat1$Comment[indNA2[m]]<-NA#
			#-------#
			# if there are four NAs#
			}else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2,3)]))==3){ #
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], dat1$Comment[indNA2[m]+3], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], dat1$Comment[indNA2[m]+3], sep=" ")#
				}#
				dat1$Comment[indNA2[m]+c(0,1,2,3)]<-NA#
			#-------#
			# if there are 3 NAs#
			} else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2)]))==2){ #
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], sep=" ")#
				}#
				dat1$Comment[indNA2[m]+c(0,1,2)]<-NA#
			#-------#
			# if there are 2 NAs#
			} else if(is.na(dat1$Site_common_name[indNA2[m]+1])==TRUE){ # If there are 2 NAs#
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], sep=" ")#
				}#
				dat1$Comment[indNA2[m]+c(0,1)]<-NA#
				}#
			}#
		# Remove NA lines within data#
		naInd<-which(is.na(dat1$Site_common_name))#
		dat1<-dat1[-naInd]#
		# Compile dataframe#
		if(i==2011&j==1){ #If it's the first file in the dataset, start dataframe called allData,#
			allData<-dat1#
		}else{ # otherwise, add it to allData#
			allData<-rbind(allData, dat1)#
		}#
		rm(dat, dat1)#
	} # end j#
} # end i
i
j
sum(is.na(indNA2))
rm(list=ls())#
#
# Loop through each quarter ad extract data:#
#
for(i in 2011:2015){ #For each year#
	for(j in 1:4){# For each quarter#
		if(i<2014|(i==2014&j==1)){# If the data are available as an HTML file, the sheet is called Sheet1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Sheet1", colIndex=c(1:16))#
		}else{ #If the data are available as a pdf file, the sheet is called Table 1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Table 1", colIndex=c(1:16))#
		}#
		# No audit data for 2011-Q1, need to add columns#
		if(i==2011&j==1){#
			dat<-cbind(dat[,1:7], rep(NA, dim(dat)[1]), dat[,8], rep(NA, dim(dat)[1]), dat[,9], rep(NA, dim(dat)[1]), dat[,10], rep(NA, dim(dat)[1]), dat[,11:12])#
		}#
		# Cut the extra info in the header#
		dat1<-dat[which(dat[,5]==c("January", "April", "July", "October")[j]):dim(dat)[1],]#
		# Add legible column names#
		names(dat1)<-c("Facility_reference_number", "License_holder", "Site_common_name", "Fish_health_zone", "Month", "Number_of_counts_performed", "L.salmonis_motile", "L.salmonis_motile_audit", "L.salmonis_female", "L.salmonis_female_aduit", "Chalimus", "Chalimus_audit", "Caligus", "Caligus_audit", "Comments", "Year_class")#
		# Cut <NA> rows at the bottom#
		if(sum(is.element(unique(dat1$License_holder), c(NA, "Cermaq", "Mainstream Canada", "Grieg Seafood", "Grieg", "Marine Harvest")))<length(unique(dat1$License_holder))) stop("License holder not matching") else maxLines<-max(which(is.element(dat1$License_holder, c("Mainstream Canada", "Grieg Seafood", "Marine Harvest", "Cermaq"))))#
		dat1<-dat1[1:maxLines,]	#
		# Infill months#
		monthInd<-which(is.na(dat1$Month)==FALSE)#
		if(length(monthInd)>3) stop("Problem with monthInd: more than three months") else{#
			dat1$Month[1:(monthInd[2]-1)]<-c("January", "April", "July", "October")[j]#
			dat1$Month[monthInd[2]:(monthInd[3]-1)]<-c("February", "May", "August", "November")[j]#
			dat1$Month[monthInd[3]:maxLines]<-c("March", "June", "September", "December")[j]#
			}#
		dat1<-dat1[-monthInd,] # Remove the month lines that are blank#
		# Infill zones#
		zoneInd<-which(is.na(dat1$Fish_health_zone)==FALSE)#
		for(m in 1:length(zoneInd)){#
			if(m==length(zoneInd)) dat1$Fish_health_zone[zoneInd[m]:(dim(dat1)[1])]<-dat1$Fish_health_zone[zoneInd[m]] else dat1$Fish_health_zone[zoneInd[m]:(zoneInd[m+1]-1)]<-dat1$Fish_health_zone[zoneInd[m]]#
			}#
		dat1<-dat1[-zoneInd,] #Remove the lines with just the zones#
		# There was a problem with the HTML files that some comments ended up in multiple cells#
		# Find these comments and make them one cell#
		dat1$Comments<-as.character(dat1$Comments)#
		#Find gaps indicating comments spanning multipe rows#
		indNA<-which(is.na(dat1$Site_common_name)==TRUE)#
		# Select those indices that are the FIRST if there is a series of NAs#
		indNA2<-indNA[c(1,which(diff(indNA)>1)+1)]#
		# If the comment is NA, then it's just a dummy row and can be removed#
		if(sum(is.na(indNA2))>0) indNA2<-indNA2[is.na(indNA2)==FALSE]#
		for(m in 1:length(indNA2)){#
			#---------#
			#If it's just one NA#
			if(is.na(dat1$Site_common_name[indNA2[m]+1])==FALSE){ #
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], sep=" ")#
				}#
				dat1$Comment[indNA2[m]]<-NA#
			#-------#
			# if there are four NAs#
			}else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2,3)]))==3){ #
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], dat1$Comment[indNA2[m]+3], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], dat1$Comment[indNA2[m]+3], sep=" ")#
				}#
				dat1$Comment[indNA2[m]+c(0,1,2,3)]<-NA#
			#-------#
			# if there are 3 NAs#
			} else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2)]))==2){ #
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], sep=" ")#
				}#
				dat1$Comment[indNA2[m]+c(0,1,2)]<-NA#
			#-------#
			# if there are 2 NAs#
			} else if(is.na(dat1$Site_common_name[indNA2[m]+1])==TRUE){ # If there are 2 NAs#
				#If it's a number, needs to be converted back to date format#
				if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
					dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], sep=" ")#
				}else{# if it's not a date, just compile them#
					dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], sep=" ")#
				}#
				dat1$Comment[indNA2[m]+c(0,1)]<-NA#
				}#
			}#
		# Remove NA lines within data#
		naInd<-which(is.na(dat1$Site_common_name))#
		dat1<-dat1[-naInd]#
		# Compile dataframe#
		if(i==2011&j==1){ #If it's the first file in the dataset, start dataframe called allData,#
			allData<-dat1#
		}else{ # otherwise, add it to allData#
			allData<-rbind(allData, dat1)#
		}#
		rm(dat, dat1)#
	} # end j#
} # end i
i
j
is.na(dat1$Site_common_name[indNA2[m]+1])
indNA2
length(indNA2)
rm(list=ls())#
#
# Loop through each quarter ad extract data:#
#
for(i in 2011:2015){ #For each year#
	for(j in 1:4){# For each quarter#
		if(i<2014|(i==2014&j==1)){# If the data are available as an HTML file, the sheet is called Sheet1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Sheet1", colIndex=c(1:16))#
		}else{ #If the data are available as a pdf file, the sheet is called Table 1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Table 1", colIndex=c(1:16))#
		}#
		# No audit data for 2011-Q1, need to add columns#
		if(i==2011&j==1){#
			dat<-cbind(dat[,1:7], rep(NA, dim(dat)[1]), dat[,8], rep(NA, dim(dat)[1]), dat[,9], rep(NA, dim(dat)[1]), dat[,10], rep(NA, dim(dat)[1]), dat[,11:12])#
		}#
		# Cut the extra info in the header#
		dat1<-dat[which(dat[,5]==c("January", "April", "July", "October")[j]):dim(dat)[1],]#
		# Add legible column names#
		names(dat1)<-c("Facility_reference_number", "License_holder", "Site_common_name", "Fish_health_zone", "Month", "Number_of_counts_performed", "L.salmonis_motile", "L.salmonis_motile_audit", "L.salmonis_female", "L.salmonis_female_aduit", "Chalimus", "Chalimus_audit", "Caligus", "Caligus_audit", "Comments", "Year_class")#
		# Cut <NA> rows at the bottom#
		if(sum(is.element(unique(dat1$License_holder), c(NA, "Cermaq", "Mainstream Canada", "Grieg Seafood", "Grieg", "Marine Harvest")))<length(unique(dat1$License_holder))) stop("License holder not matching") else maxLines<-max(which(is.element(dat1$License_holder, c("Mainstream Canada", "Grieg Seafood", "Marine Harvest", "Cermaq"))))#
		dat1<-dat1[1:maxLines,]	#
		# Infill months#
		monthInd<-which(is.na(dat1$Month)==FALSE)#
		if(length(monthInd)>3) stop("Problem with monthInd: more than three months") else{#
			dat1$Month[1:(monthInd[2]-1)]<-c("January", "April", "July", "October")[j]#
			dat1$Month[monthInd[2]:(monthInd[3]-1)]<-c("February", "May", "August", "November")[j]#
			dat1$Month[monthInd[3]:maxLines]<-c("March", "June", "September", "December")[j]#
			}#
		dat1<-dat1[-monthInd,] # Remove the month lines that are blank#
		# Infill zones#
		zoneInd<-which(is.na(dat1$Fish_health_zone)==FALSE)#
		for(m in 1:length(zoneInd)){#
			if(m==length(zoneInd)) dat1$Fish_health_zone[zoneInd[m]:(dim(dat1)[1])]<-dat1$Fish_health_zone[zoneInd[m]] else dat1$Fish_health_zone[zoneInd[m]:(zoneInd[m+1]-1)]<-dat1$Fish_health_zone[zoneInd[m]]#
			}#
		dat1<-dat1[-zoneInd,] #Remove the lines with just the zones#
		# There was a problem with the HTML files that some comments ended up in multiple cells#
		# Find these comments and make them one cell#
		dat1$Comments<-as.character(dat1$Comments)#
		#Find gaps indicating comments spanning multipe rows#
		indNA<-which(is.na(dat1$Site_common_name)==TRUE)#
		# Select those indices that are the FIRST if there is a series of NAs#
		indNA2<-indNA[c(1,which(diff(indNA)>1)+1)]#
		# If the comment is NA, then it's just a dummy row and can be removed#
		if(sum(is.na(indNA2))>0) indNA2<-indNA2[is.na(indNA2)==FALSE]#
		if(length(indNA2)>0){#
			for(m in 1:length(indNA2)){#
				#---------#
				#If it's just one NA#
				if(is.na(dat1$Site_common_name[indNA2[m]+1])==FALSE){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
						dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], sep=" ")#
					}#
					dat1$Comment[indNA2[m]]<-NA#
				#-------#
				# if there are four NAs#
				}else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2,3)]))==3){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
						dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], dat1$Comment[indNA2[m]+3], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], dat1$Comment[indNA2[m]+3], sep=" ")#
					}#
					dat1$Comment[indNA2[m]+c(0,1,2,3)]<-NA#
				#-------#
				# if there are 3 NAs#
				} else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2)]))==2){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
						dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], dat1$Comment[indNA2[m]+2], sep=" ")#
					}#
					dat1$Comment[indNA2[m]+c(0,1,2)]<-NA#
				#-------#
				# if there are 2 NAs#
				} else if(is.na(dat1$Site_common_name[indNA2[m]+1])==TRUE){ # If there are 2 NAs#
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comment[indNA2[m]-1]))==FALSE){ #
						dat1$Comment[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comment[indNA2[m]-1]), origin="1899-12-30")), dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comment[indNA2[m]-1]<-paste(dat1$Comment[indNA2[m]-1], dat1$Comment[indNA2[m]], dat1$Comment[indNA2[m]+1], sep=" ")#
					}#
					dat1$Comment[indNA2[m]+c(0,1)]<-NA#
					}#
				}# end m#
			}#end if length#
		# Remove NA lines within data#
		naInd<-which(is.na(dat1$Site_common_name))#
		dat1<-dat1[-naInd]#
		# Compile dataframe#
		if(i==2011&j==1){ #If it's the first file in the dataset, start dataframe called allData,#
			allData<-dat1#
		}else{ # otherwise, add it to allData#
			allData<-rbind(allData, dat1)#
		}#
		rm(dat, dat1)#
	} # end j#
} # end i
i
j
allData
names(allData)
names(dat1)
i
j
dat1<-dat[which(dat[,5]==c("January", "April", "July", "October")[j]):dim(dat)[1],]#
		# Add legible column names#
		names(dat1)<-c("Facility_reference_number", "License_holder", "Site_common_name", "Fish_health_zone", "Month", "Number_of_counts_performed", "L.salmonis_motile", "L.salmonis_motile_audit", "L.salmonis_female", "L.salmonis_female_aduit", "Chalimus", "Chalimus_audit", "Caligus", "Caligus_audit", "Comments", "Year_class")
names(dat1)
rm(list=ls())#
#
# Loop through each quarter ad extract data:#
#
for(i in 2011:2015){ #For each year#
	for(j in 1:4){# For each quarter#
		if(i<2014|(i==2014&j==1)){# If the data are available as an HTML file, the sheet is called Sheet1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Sheet1", colIndex=c(1:16))#
		}else{ #If the data are available as a pdf file, the sheet is called Table 1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Table 1", colIndex=c(1:16))#
		}#
		# No audit data for 2011-Q1, need to add columns#
		if(i==2011&j==1){#
			dat<-cbind(dat[,1:7], rep(NA, dim(dat)[1]), dat[,8], rep(NA, dim(dat)[1]), dat[,9], rep(NA, dim(dat)[1]), dat[,10], rep(NA, dim(dat)[1]), dat[,11:12])#
		}#
		# Cut the extra info in the header#
		dat1<-dat[which(dat[,5]==c("January", "April", "July", "October")[j]):dim(dat)[1],]#
		# Add legible column names#
		names(dat1)<-c("Facility_reference_number", "License_holder", "Site_common_name", "Fish_health_zone", "Month", "Number_of_counts_performed", "L.salmonis_motile", "L.salmonis_motile_audit", "L.salmonis_female", "L.salmonis_female_aduit", "Chalimus", "Chalimus_audit", "Caligus", "Caligus_audit", "Comments", "Year_class")#
		# Cut <NA> rows at the bottom#
		if(sum(is.element(unique(dat1$License_holder), c(NA, "Cermaq", "Mainstream Canada", "Grieg Seafood", "Grieg", "Marine Harvest")))<length(unique(dat1$License_holder))) stop("License holder not matching") else maxLines<-max(which(is.element(dat1$License_holder, c("Mainstream Canada", "Grieg Seafood", "Marine Harvest", "Cermaq"))))#
		dat1<-dat1[1:maxLines,]	#
		# Infill months#
		monthInd<-which(is.na(dat1$Month)==FALSE)#
		if(length(monthInd)>3) stop("Problem with monthInd: more than three months") else{#
			dat1$Month[1:(monthInd[2]-1)]<-c("January", "April", "July", "October")[j]#
			dat1$Month[monthInd[2]:(monthInd[3]-1)]<-c("February", "May", "August", "November")[j]#
			dat1$Month[monthInd[3]:maxLines]<-c("March", "June", "September", "December")[j]#
			}#
		dat1<-dat1[-monthInd,] # Remove the month lines that are blank#
		# Infill zones#
		zoneInd<-which(is.na(dat1$Fish_health_zone)==FALSE)#
		for(m in 1:length(zoneInd)){#
			if(m==length(zoneInd)) dat1$Fish_health_zone[zoneInd[m]:(dim(dat1)[1])]<-dat1$Fish_health_zone[zoneInd[m]] else dat1$Fish_health_zone[zoneInd[m]:(zoneInd[m+1]-1)]<-dat1$Fish_health_zone[zoneInd[m]]#
			}#
		dat1<-dat1[-zoneInd,] #Remove the lines with just the zones#
		# There was a problem with the HTML files that some comments ended up in multiple cells#
		# Find these comments and make them one cell#
		dat1$Comments<-as.character(dat1$Comments)#
		#Find gaps indicating comments spanning multipe rows#
		indNA<-which(is.na(dat1$Site_common_name)==TRUE)#
		# Select those indices that are the FIRST if there is a series of NAs#
		indNA2<-indNA[c(1,which(diff(indNA)>1)+1)]#
		# If the comment is NA, then it's just a dummy row and can be removed#
		if(sum(is.na(indNA2))>0) indNA2<-indNA2[is.na(indNA2)==FALSE]#
		if(length(indNA2)>0){#
			for(m in 1:length(indNA2)){#
				#---------#
				#If it's just one NA#
				if(is.na(dat1$Site_common_name[indNA2[m]+1])==FALSE){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], sep=" ")#
					}#
					dat1$Comments[indNA2[m]]<-NA#
				#-------#
				# if there are four NAs#
				}else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2,3)]))==3){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], dat1$Comments[indNA2[m]+3], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], dat1$Comments[indNA2[m]+3], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1,2,3)]<-NA#
				#-------#
				# if there are 3 NAs#
				} else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2)]))==2){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1,2)]<-NA#
				#-------#
				# if there are 2 NAs#
				} else if(is.na(dat1$Site_common_name[indNA2[m]+1])==TRUE){ # If there are 2 NAs#
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1)]<-NA#
					}#
				}# end m#
			}#end if length#
		# Remove NA lines within data#
		naInd<-which(is.na(dat1$Site_common_name))#
		dat1<-dat1[-naInd]#
		# Compile dataframe#
		if(i==2011&j==1){ #If it's the first file in the dataset, start dataframe called allData,#
			allData<-dat1#
		}else{ # otherwise, add it to allData#
			allData<-rbind(allData, dat1)#
		}#
		rm(dat, dat1)#
	} # end j#
} # end i
rm(list=ls())#
#
# Loop through each quarter ad extract data:#
#
for(i in 2011:2015){ #For each year#
	for(j in 1:4){# For each quarter#
		if(i<2014|(i==2014&j==1)){# If the data are available as an HTML file, the sheet is called Sheet1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Sheet1", colIndex=c(1:16))#
		}else{ #If the data are available as a pdf file, the sheet is called Table 1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Table 1", colIndex=c(1:16))#
		}#
		# No audit data for 2011-Q1, need to add columns#
		if(i==2011&j==1){#
			dat<-cbind(dat[,1:7], rep(NA, dim(dat)[1]), dat[,8], rep(NA, dim(dat)[1]), dat[,9], rep(NA, dim(dat)[1]), dat[,10], rep(NA, dim(dat)[1]), dat[,11:12])#
		}#
		# Cut the extra info in the header#
		dat1<-dat[which(dat[,5]==c("January", "April", "July", "October")[j]):dim(dat)[1],]#
		# Add legible column names#
		names(dat1)<-c("Facility_reference_number", "License_holder", "Site_common_name", "Fish_health_zone", "Month", "Number_of_counts_performed", "L.salmonis_motile", "L.salmonis_motile_audit", "L.salmonis_female", "L.salmonis_female_aduit", "Chalimus", "Chalimus_audit", "Caligus", "Caligus_audit", "Comments", "Year_class")#
		# Cut <NA> rows at the bottom#
		if(sum(is.element(unique(dat1$License_holder), c(NA, "Cermaq", "Mainstream Canada", "Grieg Seafood", "Grieg", "Marine Harvest")))<length(unique(dat1$License_holder))) stop("License holder not matching") else maxLines<-max(which(is.element(dat1$License_holder, c("Mainstream Canada", "Grieg Seafood", "Marine Harvest", "Cermaq"))))#
		dat1<-dat1[1:maxLines,]	#
		# Infill months#
		monthInd<-which(is.na(dat1$Month)==FALSE)#
		if(length(monthInd)>3) stop("Problem with monthInd: more than three months") else{#
			dat1$Month[1:(monthInd[2]-1)]<-c("January", "April", "July", "October")[j]#
			dat1$Month[monthInd[2]:(monthInd[3]-1)]<-c("February", "May", "August", "November")[j]#
			dat1$Month[monthInd[3]:maxLines]<-c("March", "June", "September", "December")[j]#
			}#
		dat1<-dat1[-monthInd,] # Remove the month lines that are blank#
		# Infill zones#
		zoneInd<-which(is.na(dat1$Fish_health_zone)==FALSE)#
		for(m in 1:length(zoneInd)){#
			if(m==length(zoneInd)) dat1$Fish_health_zone[zoneInd[m]:(dim(dat1)[1])]<-dat1$Fish_health_zone[zoneInd[m]] else dat1$Fish_health_zone[zoneInd[m]:(zoneInd[m+1]-1)]<-dat1$Fish_health_zone[zoneInd[m]]#
			}#
		dat1<-dat1[-zoneInd,] #Remove the lines with just the zones#
		# There was a problem with the HTML files that some comments ended up in multiple cells#
		# Find these comments and make them one cell#
		dat1$Comments<-as.character(dat1$Comments)#
		#Find gaps indicating comments spanning multipe rows#
		indNA<-which(is.na(dat1$Site_common_name)==TRUE)#
		# Select those indices that are the FIRST if there is a series of NAs#
		indNA2<-indNA[c(1,which(diff(indNA)>1)+1)]#
		# If the comment is NA, then it's just a dummy row and can be removed#
		if(sum(is.na(indNA2))>0) indNA2<-indNA2[is.na(indNA2)==FALSE]#
		if(length(indNA2)>0){#
			for(m in 1:length(indNA2)){#
				#---------#
				#If it's just one NA#
				if(is.na(dat1$Site_common_name[indNA2[m]+1])==FALSE){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], sep=" ")#
					}#
					dat1$Comments[indNA2[m]]<-NA#
				#-------#
				# if there are four NAs#
				}else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2,3)]))==3){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], dat1$Comments[indNA2[m]+3], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], dat1$Comments[indNA2[m]+3], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1,2,3)]<-NA#
				#-------#
				# if there are 3 NAs#
				} else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2)]))==2){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1,2)]<-NA#
				#-------#
				# if there are 2 NAs#
				} else if(is.na(dat1$Site_common_name[indNA2[m]+1])==TRUE){ # If there are 2 NAs#
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1)]<-NA#
					}#
				}# end m#
			}#end if length#
		# Remove NA lines within data#
		naInd<-which(is.na(dat1$Site_common_name))#
		dat1<-dat1[-naInd]#
		# Compile dataframe#
		if(i==2011&j==1){ #If it's the first file in the dataset, start dataframe called allData,#
			allData<-dat1#
		}else{ # otherwise, add it to allData#
			allData<-rbind(allData, dat1)#
		}#
		rm(dat, dat1)#
	} # end j#
} # end i
i
j
i=1
j=1
dat1
names(dat1)
head(dat)
i
j
names(allData)
if(i<2014|(i==2014&j==1)){# If the data are available as an HTML file, the sheet is called Sheet1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Sheet1", colIndex=c(1:16))#
		}else{ #If the data are available as a pdf file, the sheet is called Table 1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Table 1", colIndex=c(1:16))#
		}
i=2011
j=1
if(i<2014|(i==2014&j==1)){# If the data are available as an HTML file, the sheet is called Sheet1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Sheet1", colIndex=c(1:16))#
		}else{ #If the data are available as a pdf file, the sheet is called Table 1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Table 1", colIndex=c(1:16))#
		}
head(cbind(dat[,1:7], rep(NA, dim(dat)[1]), dat[,8], rep(NA, dim(dat)[1]), dat[,9], rep(NA, dim(dat)[1]), dat[,10], rep(NA, dim(dat)[1]), dat[,11:12]))
i==2011&j==1
if(i==2011&j==1){#
			dat<-cbind(dat[,1:7], rep(NA, dim(dat)[1]), dat[,8], rep(NA, dim(dat)[1]), dat[,9], rep(NA, dim(dat)[1]), dat[,10], rep(NA, dim(dat)[1]), dat[,11:12])#
		}
length(c("Facility_reference_number", "License_holder", "Site_common_name", "Fish_health_zone", "Month", "Number_of_counts_performed", "L.salmonis_motile", "L.salmonis_motile_audit", "L.salmonis_female", "L.salmonis_female_aduit", "Chalimus", "Chalimus_audit", "Caligus", "Caligus_audit", "Comments", "Year_class"))
dim(dat1)
dim(dat)
dim(cbind(dat[,1:7], rep(NA, dim(dat)[1]), dat[,8], rep(NA, dim(dat)[1]), dat[,9], rep(NA, dim(dat)[1]), dat[,10], rep(NA, dim(dat)[1]), dat[,11:12]))
dat[,12]
dat[,11]
i
j
rm(dat)
rm(dat1)
if(i<2014|(i==2014&j==1)){# If the data are available as an HTML file, the sheet is called Sheet1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Sheet1", colIndex=c(1:16))#
		}else{ #If the data are available as a pdf file, the sheet is called Table 1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Table 1", colIndex=c(1:16))#
		}#
		# No audit data for 2011-Q1, need to add columns#
		if(i==2011&j==1){#
			dat<-cbind(dat[,1:7], rep(NA, dim(dat)[1]), dat[,8], rep(NA, dim(dat)[1]), dat[,9], rep(NA, dim(dat)[1]), dat[,10], rep(NA, dim(dat)[1]), dat[,11:12])#
			}
dim(dat1)
dim(dat)
dat[,16]
dat[,5]
dat1<-dat[which(dat[,5]==c("January", "April", "July", "October")[j]):dim(dat)[1],]
names(dat1)<-c("Facility_reference_number", "License_holder", "Site_common_name", "Fish_health_zone", "Month", "Number_of_counts_performed", "L.salmonis_motile", "L.salmonis_motile_audit", "L.salmonis_female", "L.salmonis_female_aduit", "Chalimus", "Chalimus_audit", "Caligus", "Caligus_audit", "Comments", "Year_class")
dim(dat1)
if(sum(is.element(unique(dat1$License_holder), c(NA, "Cermaq", "Mainstream Canada", "Grieg Seafood", "Grieg", "Marine Harvest")))<length(unique(dat1$License_holder))) stop("License holder not matching") else maxLines<-max(which(is.element(dat1$License_holder, c("Mainstream Canada", "Grieg Seafood", "Marine Harvest", "Cermaq"))))#
		dat1<-dat1[1:maxLines,]
monthInd<-which(is.na(dat1$Month)==FALSE)#
		if(length(monthInd)>3) stop("Problem with monthInd: more than three months") else{#
			dat1$Month[1:(monthInd[2]-1)]<-c("January", "April", "July", "October")[j]#
			dat1$Month[monthInd[2]:(monthInd[3]-1)]<-c("February", "May", "August", "November")[j]#
			dat1$Month[monthInd[3]:maxLines]<-c("March", "June", "September", "December")[j]#
			}#
		dat1<-dat1[-monthInd,] # Remove the month lines that are blank#
		# Infill zones#
		zoneInd<-which(is.na(dat1$Fish_health_zone)==FALSE)#
		for(m in 1:length(zoneInd)){#
			if(m==length(zoneInd)) dat1$Fish_health_zone[zoneInd[m]:(dim(dat1)[1])]<-dat1$Fish_health_zone[zoneInd[m]] else dat1$Fish_health_zone[zoneInd[m]:(zoneInd[m+1]-1)]<-dat1$Fish_health_zone[zoneInd[m]]#
			}#
		dat1<-dat1[-zoneInd,] #Remove the lines with just the zones#
		# There was a problem with the HTML files that some comments ended up in multiple cells#
		# Find these comments and make them one cell#
		dat1$Comments<-as.character(dat1$Comments)
#Find gaps indicating comments spanning multipe rows#
		indNA<-which(is.na(dat1$Site_common_name)==TRUE)#
		# Select those indices that are the FIRST if there is a series of NAs#
		indNA2<-indNA[c(1,which(diff(indNA)>1)+1)]#
		# If the comment is NA, then it's just a dummy row and can be removed
indNA2
if(sum(is.na(indNA2))>0) indNA2<-indNA2[is.na(indNA2)==FALSE]
indNA2
indNA<-which(is.na(dat1$Site_common_name)==TRUE)#
		# Select those indices that are the FIRST if there is a series of NAs#
		indNA2<-indNA[c(1,which(diff(indNA)>1)+1)]#
		# If the comment is NA, then it's just a dummy row and can be removed
indNA2
indNA
length(indNA2)
names(dat1)
naInd<-which(is.na(dat1$Site_common_name))
naInd
dat1<-dat1[-naInd,]
dim(dat1)
length(naInd)>0
naInd<-which(is.na(dat1$Site_common_name))#
		if(length(naInd)>0) dat1<-dat1[-naInd,]
naInd<-c(1,2)
dim(dat1)
dat1<-dat[which(dat[,5]==c("January", "April", "July", "October")[j]):dim(dat)[1],]#
		# Add legible column names#
		names(dat1)<-c("Facility_reference_number", "License_holder", "Site_common_name", "Fish_health_zone", "Month", "Number_of_counts_performed", "L.salmonis_motile", "L.salmonis_motile_audit", "L.salmonis_female", "L.salmonis_female_aduit", "Chalimus", "Chalimus_audit", "Caligus", "Caligus_audit", "Comments", "Year_class")#
		# Cut <NA> rows at the bottom#
		if(sum(is.element(unique(dat1$License_holder), c(NA, "Cermaq", "Mainstream Canada", "Grieg Seafood", "Grieg", "Marine Harvest")))<length(unique(dat1$License_holder))) stop("License holder not matching") else maxLines<-max(which(is.element(dat1$License_holder, c("Mainstream Canada", "Grieg Seafood", "Marine Harvest", "Cermaq"))))#
		dat1<-dat1[1:maxLines,]	#
		# Infill months#
		monthInd<-which(is.na(dat1$Month)==FALSE)#
		if(length(monthInd)>3) stop("Problem with monthInd: more than three months") else{#
			dat1$Month[1:(monthInd[2]-1)]<-c("January", "April", "July", "October")[j]#
			dat1$Month[monthInd[2]:(monthInd[3]-1)]<-c("February", "May", "August", "November")[j]#
			dat1$Month[monthInd[3]:maxLines]<-c("March", "June", "September", "December")[j]#
			}#
		dat1<-dat1[-monthInd,] # Remove the month lines that are blank#
		# Infill zones#
		zoneInd<-which(is.na(dat1$Fish_health_zone)==FALSE)#
		for(m in 1:length(zoneInd)){#
			if(m==length(zoneInd)) dat1$Fish_health_zone[zoneInd[m]:(dim(dat1)[1])]<-dat1$Fish_health_zone[zoneInd[m]] else dat1$Fish_health_zone[zoneInd[m]:(zoneInd[m+1]-1)]<-dat1$Fish_health_zone[zoneInd[m]]#
			}#
		dat1<-dat1[-zoneInd,] #Remove the lines with just the zones#
		# There was a problem with the HTML files that some comments ended up in multiple cells#
		# Find these comments and make them one cell#
		dat1$Comments<-as.character(dat1$Comments)#
		#Find gaps indicating comments spanning multipe rows#
		indNA<-which(is.na(dat1$Site_common_name)==TRUE)#
		# Select those indices that are the FIRST if there is a series of NAs#
		indNA2<-indNA[c(1,which(diff(indNA)>1)+1)]#
		# If the comment is NA, then it's just a dummy row and can be removed#
		if(sum(is.na(indNA2))>0) indNA2<-indNA2[is.na(indNA2)==FALSE]#
		if(length(indNA2)>0){#
			for(m in 1:length(indNA2)){#
				#---------#
				#If it's just one NA#
				if(is.na(dat1$Site_common_name[indNA2[m]+1])==FALSE){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], sep=" ")#
					}#
					dat1$Comments[indNA2[m]]<-NA#
				#-------#
				# if there are four NAs#
				}else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2,3)]))==3){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], dat1$Comments[indNA2[m]+3], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], dat1$Comments[indNA2[m]+3], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1,2,3)]<-NA#
				#-------#
				# if there are 3 NAs#
				} else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2)]))==2){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1,2)]<-NA#
				#-------#
				# if there are 2 NAs#
				} else if(is.na(dat1$Site_common_name[indNA2[m]+1])==TRUE){ # If there are 2 NAs#
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1)]<-NA#
					}#
				}# end m#
			}#end if length#
		# Remove NA lines within data#
		naInd<-which(is.na(dat1$Site_common_name))
naInd
naInd<-c(1,2)
dim(dat1)
if(length(naInd)>0) dat1<-dat1[-naInd,]
dim(dat1)
rm(list=ls())#
#
# Loop through each quarter ad extract data:#
#
for(i in 2011:2015){ #For each year#
	for(j in 1:4){# For each quarter#
		if(i<2014|(i==2014&j==1)){# If the data are available as an HTML file, the sheet is called Sheet1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Sheet1", colIndex=c(1:16))#
		}else{ #If the data are available as a pdf file, the sheet is called Table 1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Table 1", colIndex=c(1:16))#
		}#
		# No audit data for 2011-Q1, need to add columns#
		if(i==2011&j==1){#
			dat<-cbind(dat[,1:7], rep(NA, dim(dat)[1]), dat[,8], rep(NA, dim(dat)[1]), dat[,9], rep(NA, dim(dat)[1]), dat[,10], rep(NA, dim(dat)[1]), dat[,11:12])#
			}#
		# Cut the extra info in the header#
		dat1<-dat[which(dat[,5]==c("January", "April", "July", "October")[j]):dim(dat)[1],]#
		# Add legible column names#
		names(dat1)<-c("Facility_reference_number", "License_holder", "Site_common_name", "Fish_health_zone", "Month", "Number_of_counts_performed", "L.salmonis_motile", "L.salmonis_motile_audit", "L.salmonis_female", "L.salmonis_female_aduit", "Chalimus", "Chalimus_audit", "Caligus", "Caligus_audit", "Comments", "Year_class")#
		# Cut <NA> rows at the bottom#
		if(sum(is.element(unique(dat1$License_holder), c(NA, "Cermaq", "Mainstream Canada", "Grieg Seafood", "Grieg", "Marine Harvest")))<length(unique(dat1$License_holder))) stop("License holder not matching") else maxLines<-max(which(is.element(dat1$License_holder, c("Mainstream Canada", "Grieg Seafood", "Marine Harvest", "Cermaq"))))#
		dat1<-dat1[1:maxLines,]	#
		# Infill months#
		monthInd<-which(is.na(dat1$Month)==FALSE)#
		if(length(monthInd)>3) stop("Problem with monthInd: more than three months") else{#
			dat1$Month[1:(monthInd[2]-1)]<-c("January", "April", "July", "October")[j]#
			dat1$Month[monthInd[2]:(monthInd[3]-1)]<-c("February", "May", "August", "November")[j]#
			dat1$Month[monthInd[3]:maxLines]<-c("March", "June", "September", "December")[j]#
			}#
		dat1<-dat1[-monthInd,] # Remove the month lines that are blank#
		# Infill zones#
		zoneInd<-which(is.na(dat1$Fish_health_zone)==FALSE)#
		for(m in 1:length(zoneInd)){#
			if(m==length(zoneInd)) dat1$Fish_health_zone[zoneInd[m]:(dim(dat1)[1])]<-dat1$Fish_health_zone[zoneInd[m]] else dat1$Fish_health_zone[zoneInd[m]:(zoneInd[m+1]-1)]<-dat1$Fish_health_zone[zoneInd[m]]#
			}#
		dat1<-dat1[-zoneInd,] #Remove the lines with just the zones#
		# There was a problem with the HTML files that some comments ended up in multiple cells#
		# Find these comments and make them one cell#
		dat1$Comments<-as.character(dat1$Comments)#
		#Find gaps indicating comments spanning multipe rows#
		indNA<-which(is.na(dat1$Site_common_name)==TRUE)#
		# Select those indices that are the FIRST if there is a series of NAs#
		indNA2<-indNA[c(1,which(diff(indNA)>1)+1)]#
		# If the comment is NA, then it's just a dummy row and can be removed#
		if(sum(is.na(indNA2))>0) indNA2<-indNA2[is.na(indNA2)==FALSE]#
		if(length(indNA2)>0){#
			for(m in 1:length(indNA2)){#
				#---------#
				#If it's just one NA#
				if(is.na(dat1$Site_common_name[indNA2[m]+1])==FALSE){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], sep=" ")#
					}#
					dat1$Comments[indNA2[m]]<-NA#
				#-------#
				# if there are four NAs#
				}else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2,3)]))==3){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], dat1$Comments[indNA2[m]+3], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], dat1$Comments[indNA2[m]+3], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1,2,3)]<-NA#
				#-------#
				# if there are 3 NAs#
				} else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2)]))==2){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1,2)]<-NA#
				#-------#
				# if there are 2 NAs#
				} else if(is.na(dat1$Site_common_name[indNA2[m]+1])==TRUE){ # If there are 2 NAs#
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1)]<-NA#
					}#
				}# end m#
			}#end if length#
		# Remove NA lines within data#
		naInd<-which(is.na(dat1$Site_common_name))#
		if(length(naInd)>0) dat1<-dat1[-naInd,]#
		# Compile dataframe#
		if(i==2011&j==1){ #If it's the first file in the dataset, start dataframe called allData,#
			allData<-dat1#
		}else{ # otherwise, add it to allData#
			allData<-rbind(allData, dat1)#
		}#
		rm(dat, dat1)#
	} # end j#
} # end i
i
j
unique(dat1$License_holder)
which(dat1$License_holder=="Mainstream")
if(i<2014|(i==2014&j==1)){# If the data are available as an HTML file, the sheet is called Sheet1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Sheet1", colIndex=c(1:16))#
		}else{ #If the data are available as a pdf file, the sheet is called Table 1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Table 1", colIndex=c(1:16))#
		}#
		# No audit data for 2011-Q1, need to add columns#
		if(i==2011&j==1){#
			dat<-cbind(dat[,1:7], rep(NA, dim(dat)[1]), dat[,8], rep(NA, dim(dat)[1]), dat[,9], rep(NA, dim(dat)[1]), dat[,10], rep(NA, dim(dat)[1]), dat[,11:12])#
			}#
		# Cut the extra info in the header#
		dat1<-dat[which(dat[,5]==c("January", "April", "July", "October")[j]):dim(dat)[1],]#
		# Add legible column names#
		names(dat1)<-c("Facility_reference_number", "License_holder", "Site_common_name", "Fish_health_zone", "Month", "Number_of_counts_performed", "L.salmonis_motile", "L.salmonis_motile_audit", "L.salmonis_female", "L.salmonis_female_aduit", "Chalimus", "Chalimus_audit", "Caligus", "Caligus_audit", "Comments", "Year_class")#
		# Cut <NA> rows at the bottom#
		if(sum(is.element(unique(dat1$License_holder), c(NA, "Cermaq", "Mainstream Canada", "Grieg Seafood", "Grieg", "Marine Harvest")))<length(unique(dat1$License_holder))) stop("License holder not matching") else maxLines<-max(which(is.element(dat1$License_holder, c("Mainstream Canada", "Grieg Seafood", "Marine Harvest", "Cermaq"))))#
		dat1<-dat1[1:maxLines,]	#
		# Infill months#
		monthInd<-which(is.na(dat1$Month)==FALSE)#
		if(length(monthInd)>3) stop("Problem with monthInd: more than three months") else{#
			dat1$Month[1:(monthInd[2]-1)]<-c("January", "April", "July", "October")[j]#
			dat1$Month[monthInd[2]:(monthInd[3]-1)]<-c("February", "May", "August", "November")[j]#
			dat1$Month[monthInd[3]:maxLines]<-c("March", "June", "September", "December")[j]#
			}#
		dat1<-dat1[-monthInd,] # Remove the month lines that are blank#
		# Infill zones#
		zoneInd<-which(is.na(dat1$Fish_health_zone)==FALSE)#
		for(m in 1:length(zoneInd)){#
			if(m==length(zoneInd)) dat1$Fish_health_zone[zoneInd[m]:(dim(dat1)[1])]<-dat1$Fish_health_zone[zoneInd[m]] else dat1$Fish_health_zone[zoneInd[m]:(zoneInd[m+1]-1)]<-dat1$Fish_health_zone[zoneInd[m]]#
			}#
		dat1<-dat1[-zoneInd,] #Remove the lines with just the zones#
		# There was a problem with the HTML files that some comments ended up in multiple cells#
		# Find these comments and make them one cell#
		dat1$Comments<-as.character(dat1$Comments)#
		#Find gaps indicating comments spanning multipe rows#
		indNA<-which(is.na(dat1$Site_common_name)==TRUE)#
		# Select those indices that are the FIRST if there is a series of NAs#
		indNA2<-indNA[c(1,which(diff(indNA)>1)+1)]#
		# If the comment is NA, then it's just a dummy row and can be removed#
		if(sum(is.na(indNA2))>0) indNA2<-indNA2[is.na(indNA2)==FALSE]#
		if(length(indNA2)>0){#
			for(m in 1:length(indNA2)){#
				#---------#
				#If it's just one NA#
				if(is.na(dat1$Site_common_name[indNA2[m]+1])==FALSE){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], sep=" ")#
					}#
					dat1$Comments[indNA2[m]]<-NA#
				#-------#
				# if there are four NAs#
				}else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2,3)]))==3){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], dat1$Comments[indNA2[m]+3], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], dat1$Comments[indNA2[m]+3], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1,2,3)]<-NA#
				#-------#
				# if there are 3 NAs#
				} else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2)]))==2){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1,2)]<-NA#
				#-------#
				# if there are 2 NAs#
				} else if(is.na(dat1$Site_common_name[indNA2[m]+1])==TRUE){ # If there are 2 NAs#
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1)]<-NA#
					}#
				}# end m#
			}#end if length#
		# Remove NA lines within data#
		naInd<-which(is.na(dat1$Site_common_name))#
		if(length(naInd)>0) dat1<-dat1[-naInd,]
# Compile dataframe#
		if(i==2011&j==1){ #If it's the first file in the dataset, start dataframe called allData,#
			allData<-dat1#
		}else{ # otherwise, add it to allData#
			allData<-rbind(allData, dat1)#
		}#
		rm(dat, dat1)
for(i in 2014:2015){ #For each year#
	for(j in 1:4){# For each quarter#
		if(i<2014|(i==2014&j==1)){# If the data are available as an HTML file, the sheet is called Sheet1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Sheet1", colIndex=c(1:16))#
		}else{ #If the data are available as a pdf file, the sheet is called Table 1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Table 1", colIndex=c(1:16))#
		}#
		# No audit data for 2011-Q1, need to add columns#
		if(i==2011&j==1){#
			dat<-cbind(dat[,1:7], rep(NA, dim(dat)[1]), dat[,8], rep(NA, dim(dat)[1]), dat[,9], rep(NA, dim(dat)[1]), dat[,10], rep(NA, dim(dat)[1]), dat[,11:12])#
			}#
		# Cut the extra info in the header#
		dat1<-dat[which(dat[,5]==c("January", "April", "July", "October")[j]):dim(dat)[1],]#
		# Add legible column names#
		names(dat1)<-c("Facility_reference_number", "License_holder", "Site_common_name", "Fish_health_zone", "Month", "Number_of_counts_performed", "L.salmonis_motile", "L.salmonis_motile_audit", "L.salmonis_female", "L.salmonis_female_aduit", "Chalimus", "Chalimus_audit", "Caligus", "Caligus_audit", "Comments", "Year_class")#
		# Cut <NA> rows at the bottom#
		if(sum(is.element(unique(dat1$License_holder), c(NA, "Cermaq", "Mainstream Canada", "Grieg Seafood", "Grieg", "Marine Harvest")))<length(unique(dat1$License_holder))) stop("License holder not matching") else maxLines<-max(which(is.element(dat1$License_holder, c("Mainstream Canada", "Grieg Seafood", "Marine Harvest", "Cermaq"))))#
		dat1<-dat1[1:maxLines,]	#
		# Infill months#
		monthInd<-which(is.na(dat1$Month)==FALSE)#
		if(length(monthInd)>3) stop("Problem with monthInd: more than three months") else{#
			dat1$Month[1:(monthInd[2]-1)]<-c("January", "April", "July", "October")[j]#
			dat1$Month[monthInd[2]:(monthInd[3]-1)]<-c("February", "May", "August", "November")[j]#
			dat1$Month[monthInd[3]:maxLines]<-c("March", "June", "September", "December")[j]#
			}#
		dat1<-dat1[-monthInd,] # Remove the month lines that are blank#
		# Infill zones#
		zoneInd<-which(is.na(dat1$Fish_health_zone)==FALSE)#
		for(m in 1:length(zoneInd)){#
			if(m==length(zoneInd)) dat1$Fish_health_zone[zoneInd[m]:(dim(dat1)[1])]<-dat1$Fish_health_zone[zoneInd[m]] else dat1$Fish_health_zone[zoneInd[m]:(zoneInd[m+1]-1)]<-dat1$Fish_health_zone[zoneInd[m]]#
			}#
		dat1<-dat1[-zoneInd,] #Remove the lines with just the zones#
		# There was a problem with the HTML files that some comments ended up in multiple cells#
		# Find these comments and make them one cell#
		dat1$Comments<-as.character(dat1$Comments)#
		#Find gaps indicating comments spanning multipe rows#
		indNA<-which(is.na(dat1$Site_common_name)==TRUE)#
		# Select those indices that are the FIRST if there is a series of NAs#
		indNA2<-indNA[c(1,which(diff(indNA)>1)+1)]#
		# If the comment is NA, then it's just a dummy row and can be removed#
		if(sum(is.na(indNA2))>0) indNA2<-indNA2[is.na(indNA2)==FALSE]#
		if(length(indNA2)>0){#
			for(m in 1:length(indNA2)){#
				#---------#
				#If it's just one NA#
				if(is.na(dat1$Site_common_name[indNA2[m]+1])==FALSE){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], sep=" ")#
					}#
					dat1$Comments[indNA2[m]]<-NA#
				#-------#
				# if there are four NAs#
				}else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2,3)]))==3){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], dat1$Comments[indNA2[m]+3], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], dat1$Comments[indNA2[m]+3], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1,2,3)]<-NA#
				#-------#
				# if there are 3 NAs#
				} else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2)]))==2){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1,2)]<-NA#
				#-------#
				# if there are 2 NAs#
				} else if(is.na(dat1$Site_common_name[indNA2[m]+1])==TRUE){ # If there are 2 NAs#
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1)]<-NA#
					}#
				}# end m#
			}#end if length#
		# Remove NA lines within data#
		naInd<-which(is.na(dat1$Site_common_name))#
		if(length(naInd)>0) dat1<-dat1[-naInd,]#
		# Compile dataframe#
		if(i==2011&j==1){ #If it's the first file in the dataset, start dataframe called allData,#
			allData<-dat1#
		}else{ # otherwise, add it to allData#
			allData<-rbind(allData, dat1)#
		}#
		rm(dat, dat1)#
	} # end j#
} # end i
i
j
unique(dat1$License_holder)
if(i<2014|(i==2014&j==1)){# If the data are available as an HTML file, the sheet is called Sheet1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Sheet1", colIndex=c(1:16))#
		}else{ #If the data are available as a pdf file, the sheet is called Table 1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Table 1", colIndex=c(1:16))#
		}#
		# No audit data for 2011-Q1, need to add columns#
		if(i==2011&j==1){#
			dat<-cbind(dat[,1:7], rep(NA, dim(dat)[1]), dat[,8], rep(NA, dim(dat)[1]), dat[,9], rep(NA, dim(dat)[1]), dat[,10], rep(NA, dim(dat)[1]), dat[,11:12])#
			}#
		# Cut the extra info in the header#
		dat1<-dat[which(dat[,5]==c("January", "April", "July", "October")[j]):dim(dat)[1],]#
		# Add legible column names#
		names(dat1)<-c("Facility_reference_number", "License_holder", "Site_common_name", "Fish_health_zone", "Month", "Number_of_counts_performed", "L.salmonis_motile", "L.salmonis_motile_audit", "L.salmonis_female", "L.salmonis_female_aduit", "Chalimus", "Chalimus_audit", "Caligus", "Caligus_audit", "Comments", "Year_class")#
		# Cut <NA> rows at the bottom#
		if(sum(is.element(unique(dat1$License_holder), c(NA, "Cermaq", "Mainstream Canada", "Grieg Seafood", "Grieg", "Marine Harvest")))<length(unique(dat1$License_holder))) stop("License holder not matching") else maxLines<-max(which(is.element(dat1$License_holder, c("Mainstream Canada", "Grieg Seafood", "Marine Harvest", "Cermaq"))))#
		dat1<-dat1[1:maxLines,]	#
		# Infill months#
		monthInd<-which(is.na(dat1$Month)==FALSE)#
		if(length(monthInd)>3) stop("Problem with monthInd: more than three months") else{#
			dat1$Month[1:(monthInd[2]-1)]<-c("January", "April", "July", "October")[j]#
			dat1$Month[monthInd[2]:(monthInd[3]-1)]<-c("February", "May", "August", "November")[j]#
			dat1$Month[monthInd[3]:maxLines]<-c("March", "June", "September", "December")[j]#
			}#
		dat1<-dat1[-monthInd,] # Remove the month lines that are blank#
		# Infill zones#
		zoneInd<-which(is.na(dat1$Fish_health_zone)==FALSE)#
		for(m in 1:length(zoneInd)){#
			if(m==length(zoneInd)) dat1$Fish_health_zone[zoneInd[m]:(dim(dat1)[1])]<-dat1$Fish_health_zone[zoneInd[m]] else dat1$Fish_health_zone[zoneInd[m]:(zoneInd[m+1]-1)]<-dat1$Fish_health_zone[zoneInd[m]]#
			}#
		dat1<-dat1[-zoneInd,] #Remove the lines with just the zones#
		# There was a problem with the HTML files that some comments ended up in multiple cells#
		# Find these comments and make them one cell#
		dat1$Comments<-as.character(dat1$Comments)#
		#Find gaps indicating comments spanning multipe rows#
		indNA<-which(is.na(dat1$Site_common_name)==TRUE)#
		# Select those indices that are the FIRST if there is a series of NAs#
		indNA2<-indNA[c(1,which(diff(indNA)>1)+1)]#
		# If the comment is NA, then it's just a dummy row and can be removed#
		if(sum(is.na(indNA2))>0) indNA2<-indNA2[is.na(indNA2)==FALSE]#
		if(length(indNA2)>0){#
			for(m in 1:length(indNA2)){#
				#---------#
				#If it's just one NA#
				if(is.na(dat1$Site_common_name[indNA2[m]+1])==FALSE){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], sep=" ")#
					}#
					dat1$Comments[indNA2[m]]<-NA#
				#-------#
				# if there are four NAs#
				}else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2,3)]))==3){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], dat1$Comments[indNA2[m]+3], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], dat1$Comments[indNA2[m]+3], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1,2,3)]<-NA#
				#-------#
				# if there are 3 NAs#
				} else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2)]))==2){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1,2)]<-NA#
				#-------#
				# if there are 2 NAs#
				} else if(is.na(dat1$Site_common_name[indNA2[m]+1])==TRUE){ # If there are 2 NAs#
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1)]<-NA#
					}#
				}# end m#
			}#end if length#
		# Remove NA lines within data#
		naInd<-which(is.na(dat1$Site_common_name))#
		if(length(naInd)>0) dat1<-dat1[-naInd,]#
		# Compile dataframe#
		if(i==2011&j==1){ #If it's the first file in the dataset, start dataframe called allData,#
			allData<-dat1#
		}else{ # otherwise, add it to allData#
			allData<-rbind(allData, dat1)#
		}#
		rm(dat, dat1)
j=3
if(i<2014|(i==2014&j==1)){# If the data are available as an HTML file, the sheet is called Sheet1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Sheet1", colIndex=c(1:16))#
		}else{ #If the data are available as a pdf file, the sheet is called Table 1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Table 1", colIndex=c(1:16))#
		}#
		# No audit data for 2011-Q1, need to add columns#
		if(i==2011&j==1){#
			dat<-cbind(dat[,1:7], rep(NA, dim(dat)[1]), dat[,8], rep(NA, dim(dat)[1]), dat[,9], rep(NA, dim(dat)[1]), dat[,10], rep(NA, dim(dat)[1]), dat[,11:12])#
			}#
		# Cut the extra info in the header#
		dat1<-dat[which(dat[,5]==c("January", "April", "July", "October")[j]):dim(dat)[1],]#
		# Add legible column names#
		names(dat1)<-c("Facility_reference_number", "License_holder", "Site_common_name", "Fish_health_zone", "Month", "Number_of_counts_performed", "L.salmonis_motile", "L.salmonis_motile_audit", "L.salmonis_female", "L.salmonis_female_aduit", "Chalimus", "Chalimus_audit", "Caligus", "Caligus_audit", "Comments", "Year_class")#
		# Cut <NA> rows at the bottom#
		if(sum(is.element(unique(dat1$License_holder), c(NA, "Cermaq", "Mainstream Canada", "Grieg Seafood", "Grieg", "Marine Harvest")))<length(unique(dat1$License_holder))) stop("License holder not matching") else maxLines<-max(which(is.element(dat1$License_holder, c("Mainstream Canada", "Grieg Seafood", "Marine Harvest", "Cermaq"))))#
		dat1<-dat1[1:maxLines,]	#
		# Infill months#
		monthInd<-which(is.na(dat1$Month)==FALSE)#
		if(length(monthInd)>3) stop("Problem with monthInd: more than three months") else{#
			dat1$Month[1:(monthInd[2]-1)]<-c("January", "April", "July", "October")[j]#
			dat1$Month[monthInd[2]:(monthInd[3]-1)]<-c("February", "May", "August", "November")[j]#
			dat1$Month[monthInd[3]:maxLines]<-c("March", "June", "September", "December")[j]#
			}#
		dat1<-dat1[-monthInd,] # Remove the month lines that are blank#
		# Infill zones#
		zoneInd<-which(is.na(dat1$Fish_health_zone)==FALSE)#
		for(m in 1:length(zoneInd)){#
			if(m==length(zoneInd)) dat1$Fish_health_zone[zoneInd[m]:(dim(dat1)[1])]<-dat1$Fish_health_zone[zoneInd[m]] else dat1$Fish_health_zone[zoneInd[m]:(zoneInd[m+1]-1)]<-dat1$Fish_health_zone[zoneInd[m]]#
			}#
		dat1<-dat1[-zoneInd,] #Remove the lines with just the zones#
		# There was a problem with the HTML files that some comments ended up in multiple cells#
		# Find these comments and make them one cell#
		dat1$Comments<-as.character(dat1$Comments)#
		#Find gaps indicating comments spanning multipe rows#
		indNA<-which(is.na(dat1$Site_common_name)==TRUE)#
		# Select those indices that are the FIRST if there is a series of NAs#
		indNA2<-indNA[c(1,which(diff(indNA)>1)+1)]#
		# If the comment is NA, then it's just a dummy row and can be removed#
		if(sum(is.na(indNA2))>0) indNA2<-indNA2[is.na(indNA2)==FALSE]#
		if(length(indNA2)>0){#
			for(m in 1:length(indNA2)){#
				#---------#
				#If it's just one NA#
				if(is.na(dat1$Site_common_name[indNA2[m]+1])==FALSE){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], sep=" ")#
					}#
					dat1$Comments[indNA2[m]]<-NA#
				#-------#
				# if there are four NAs#
				}else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2,3)]))==3){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], dat1$Comments[indNA2[m]+3], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], dat1$Comments[indNA2[m]+3], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1,2,3)]<-NA#
				#-------#
				# if there are 3 NAs#
				} else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2)]))==2){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1,2)]<-NA#
				#-------#
				# if there are 2 NAs#
				} else if(is.na(dat1$Site_common_name[indNA2[m]+1])==TRUE){ # If there are 2 NAs#
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1)]<-NA#
					}#
				}# end m#
			}#end if length#
		# Remove NA lines within data#
		naInd<-which(is.na(dat1$Site_common_name))#
		if(length(naInd)>0) dat1<-dat1[-naInd,]#
		# Compile dataframe#
		if(i==2011&j==1){ #If it's the first file in the dataset, start dataframe called allData,#
			allData<-dat1#
		}else{ # otherwise, add it to allData#
			allData<-rbind(allData, dat1)#
		}#
		rm(dat, dat1)
indNA
indNA2
dat1[]
i
j
if(i<2014|(i==2014&j==1)){# If the data are available as an HTML file, the sheet is called Sheet1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Sheet1", colIndex=c(1:16))#
		}else{ #If the data are available as a pdf file, the sheet is called Table 1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Table 1", colIndex=c(1:16))#
		}#
		# No audit data for 2011-Q1, need to add columns#
		if(i==2011&j==1){#
			dat<-cbind(dat[,1:7], rep(NA, dim(dat)[1]), dat[,8], rep(NA, dim(dat)[1]), dat[,9], rep(NA, dim(dat)[1]), dat[,10], rep(NA, dim(dat)[1]), dat[,11:12])#
			}#
		# Cut the extra info in the header#
		dat1<-dat[which(dat[,5]==c("January", "April", "July", "October")[j]):dim(dat)[1],]#
		# Add legible column names#
		names(dat1)<-c("Facility_reference_number", "License_holder", "Site_common_name", "Fish_health_zone", "Month", "Number_of_counts_performed", "L.salmonis_motile", "L.salmonis_motile_audit", "L.salmonis_female", "L.salmonis_female_aduit", "Chalimus", "Chalimus_audit", "Caligus", "Caligus_audit", "Comments", "Year_class")#
		# Cut <NA> rows at the bottom#
		if(sum(is.element(unique(dat1$License_holder), c(NA, "Cermaq", "Mainstream Canada", "Grieg Seafood", "Grieg", "Marine Harvest")))<length(unique(dat1$License_holder))) stop("License holder not matching") else maxLines<-max(which(is.element(dat1$License_holder, c("Mainstream Canada", "Grieg Seafood", "Marine Harvest", "Cermaq"))))#
		dat1<-dat1[1:maxLines,]	#
		# Infill months#
		monthInd<-which(is.na(dat1$Month)==FALSE)#
		if(length(monthInd)>3) stop("Problem with monthInd: more than three months") else{#
			dat1$Month[1:(monthInd[2]-1)]<-c("January", "April", "July", "October")[j]#
			dat1$Month[monthInd[2]:(monthInd[3]-1)]<-c("February", "May", "August", "November")[j]#
			dat1$Month[monthInd[3]:maxLines]<-c("March", "June", "September", "December")[j]#
			}#
		dat1<-dat1[-monthInd,] # Remove the month lines that are blank#
		# Infill zones#
		zoneInd<-which(is.na(dat1$Fish_health_zone)==FALSE)#
		for(m in 1:length(zoneInd)){#
			if(m==length(zoneInd)) dat1$Fish_health_zone[zoneInd[m]:(dim(dat1)[1])]<-dat1$Fish_health_zone[zoneInd[m]] else dat1$Fish_health_zone[zoneInd[m]:(zoneInd[m+1]-1)]<-dat1$Fish_health_zone[zoneInd[m]]#
			}#
		dat1<-dat1[-zoneInd,]
head(dat1)
dat1$Comments<-as.character(dat1$Comments)
indNA<-which(is.na(dat1$Site_common_name)==TRUE)
indNA
dat1[180:185,]
maxLines
unique(dat1$License_holder)
sum(is.element(unique(dat1$License_holder), c(NA, "Cermaq", "Mainstream Canada", "Grieg Seafood", "Grieg", "Marine Harvest")))<length(unique(dat1$License_holder))
if(i<2014|(i==2014&j==1)){# If the data are available as an HTML file, the sheet is called Sheet1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Sheet1", colIndex=c(1:16))#
		}else{ #If the data are available as a pdf file, the sheet is called Table 1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Table 1", colIndex=c(1:16))#
		}#
		# No audit data for 2011-Q1, need to add columns#
		if(i==2011&j==1){#
			dat<-cbind(dat[,1:7], rep(NA, dim(dat)[1]), dat[,8], rep(NA, dim(dat)[1]), dat[,9], rep(NA, dim(dat)[1]), dat[,10], rep(NA, dim(dat)[1]), dat[,11:12])#
			}#
		# Cut the extra info in the header#
		dat1<-dat[which(dat[,5]==c("January", "April", "July", "October")[j]):dim(dat)[1],]#
		# Add legible column names#
		names(dat1)<-c("Facility_reference_number", "License_holder", "Site_common_name", "Fish_health_zone", "Month", "Number_of_counts_performed", "L.salmonis_motile", "L.salmonis_motile_audit", "L.salmonis_female", "L.salmonis_female_aduit", "Chalimus", "Chalimus_audit", "Caligus", "Caligus_audit", "Comments", "Year_class")#
		# Cut <NA> rows at the bottom#
		if(sum(is.element(unique(dat1$License_holder), c(NA, "Cermaq", "Mainstream Canada", "Grieg Seafood", "Grieg", "Marine Harvest")))<length(unique(dat1$License_holder))) stop("License holder not matching") else maxLines<-max(which(is.element(dat1$License_holder, c("Mainstream Canada", "Grieg Seafood", "Marine Harvest", "Cermaq"))))#
		dat1<-dat1[1:maxLines,]
if(i<2014|(i==2014&j==1)){# If the data are available as an HTML file, the sheet is called Sheet1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Sheet1", colIndex=c(1:16))#
		}else{ #If the data are available as a pdf file, the sheet is called Table 1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Table 1", colIndex=c(1:16))#
		}#
		# No audit data for 2011-Q1, need to add columns#
		if(i==2011&j==1){#
			dat<-cbind(dat[,1:7], rep(NA, dim(dat)[1]), dat[,8], rep(NA, dim(dat)[1]), dat[,9], rep(NA, dim(dat)[1]), dat[,10], rep(NA, dim(dat)[1]), dat[,11:12])#
			}#
		# Cut the extra info in the header#
		dat1<-dat[which(dat[,5]==c("January", "April", "July", "October")[j]):dim(dat)[1],]#
		# Add legible column names#
		names(dat1)<-c("Facility_reference_number", "License_holder", "Site_common_name", "Fish_health_zone", "Month", "Number_of_counts_performed", "L.salmonis_motile", "L.salmonis_motile_audit", "L.salmonis_female", "L.salmonis_female_aduit", "Chalimus", "Chalimus_audit", "Caligus", "Caligus_audit", "Comments", "Year_class")#
		# Cut <NA> rows at the bottom#
		if(sum(is.element(unique(dat1$License_holder), c(NA, "Cermaq", "Mainstream Canada", "Grieg Seafood", "Grieg", "Marine Harvest")))<length(unique(dat1$License_holder))) stop("License holder not matching") else maxLines<-max(which(is.element(dat1$License_holder, c("Mainstream Canada", "Grieg Seafood", "Marine Harvest", "Cermaq"))))#
		dat1<-dat1[1:maxLines,]	#
		# Infill months#
		monthInd<-which(is.na(dat1$Month)==FALSE)#
		if(length(monthInd)>3) stop("Problem with monthInd: more than three months") else{#
			dat1$Month[1:(monthInd[2]-1)]<-c("January", "April", "July", "October")[j]#
			dat1$Month[monthInd[2]:(monthInd[3]-1)]<-c("February", "May", "August", "November")[j]#
			dat1$Month[monthInd[3]:maxLines]<-c("March", "June", "September", "December")[j]#
			}#
		dat1<-dat1[-monthInd,] # Remove the month lines that are blank#
		# Infill zones#
		zoneInd<-which(is.na(dat1$Fish_health_zone)==FALSE)#
		for(m in 1:length(zoneInd)){#
			if(m==length(zoneInd)) dat1$Fish_health_zone[zoneInd[m]:(dim(dat1)[1])]<-dat1$Fish_health_zone[zoneInd[m]] else dat1$Fish_health_zone[zoneInd[m]:(zoneInd[m+1]-1)]<-dat1$Fish_health_zone[zoneInd[m]]#
			}#
		dat1<-dat1[-zoneInd,] #Remove the lines with just the zones#
		# There was a problem with the HTML files that some comments ended up in multiple cells#
		# Find these comments and make them one cell#
		dat1$Comments<-as.character(dat1$Comments)
indNA<-which(is.na(dat1$Site_common_name)==TRUE)
indNA
indNA<-which(is.na(dat1$Site_common_name)==TRUE)#
		# Select those indices that are the FIRST if there is a series of NAs#
		indNA2<-indNA[c(1,which(diff(indNA)>1)+1)]#
		# If the comment is NA, then it's just a dummy row and can be removed#
		if(sum(is.na(indNA2))>0) indNA2<-indNA2[is.na(indNA2)==FALSE]#
		if(length(indNA2)>0){#
			for(m in 1:length(indNA2)){#
				#---------#
				#If it's just one NA#
				if(is.na(dat1$Site_common_name[indNA2[m]+1])==FALSE){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], sep=" ")#
					}#
					dat1$Comments[indNA2[m]]<-NA#
				#-------#
				# if there are four NAs#
				}else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2,3)]))==3){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], dat1$Comments[indNA2[m]+3], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], dat1$Comments[indNA2[m]+3], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1,2,3)]<-NA#
				#-------#
				# if there are 3 NAs#
				} else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2)]))==2){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1,2)]<-NA#
				#-------#
				# if there are 2 NAs#
				} else if(is.na(dat1$Site_common_name[indNA2[m]+1])==TRUE){ # If there are 2 NAs#
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1)]<-NA#
					}#
				}# end m#
			}#end if length#
		# Remove NA lines within data#
		naInd<-which(is.na(dat1$Site_common_name))#
		if(length(naInd)>0) dat1<-dat1[-naInd,]#
		# Compile dataframe#
		if(i==2011&j==1){ #If it's the first file in the dataset, start dataframe called allData,#
			allData<-dat1#
		}else{ # otherwise, add it to allData#
			allData<-rbind(allData, dat1)#
		}
allData
rm(list=ls())#
#
# Loop through each quarter ad extract data:#
#
for(i in 2011:2015){ #For each year#
	for(j in 1:4){# For each quarter#
		if(i<2014|(i==2014&j==1)){# If the data are available as an HTML file, the sheet is called Sheet1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Sheet1", colIndex=c(1:16))#
		}else{ #If the data are available as a pdf file, the sheet is called Table 1#
			dat<-read.xlsx(paste("DFO_", i, "_Q", j, ".xlsx", sep=""), sheetName="Table 1", colIndex=c(1:16))#
		}#
		# No audit data for 2011-Q1, need to add columns#
		if(i==2011&j==1){#
			dat<-cbind(dat[,1:7], rep(NA, dim(dat)[1]), dat[,8], rep(NA, dim(dat)[1]), dat[,9], rep(NA, dim(dat)[1]), dat[,10], rep(NA, dim(dat)[1]), dat[,11:12])#
			}#
		# Cut the extra info in the header#
		dat1<-dat[which(dat[,5]==c("January", "April", "July", "October")[j]):dim(dat)[1],]#
		# Add legible column names#
		names(dat1)<-c("Facility_reference_number", "License_holder", "Site_common_name", "Fish_health_zone", "Month", "Number_of_counts_performed", "L.salmonis_motile", "L.salmonis_motile_audit", "L.salmonis_female", "L.salmonis_female_aduit", "Chalimus", "Chalimus_audit", "Caligus", "Caligus_audit", "Comments", "Year_class")#
		# Cut <NA> rows at the bottom#
		if(sum(is.element(unique(dat1$License_holder), c(NA, "Cermaq", "Mainstream Canada", "Grieg Seafood", "Grieg", "Marine Harvest")))<length(unique(dat1$License_holder))) stop("License holder not matching") else maxLines<-max(which(is.element(dat1$License_holder, c("Mainstream Canada", "Grieg Seafood", "Marine Harvest", "Cermaq"))))#
		dat1<-dat1[1:maxLines,]	#
		# Infill months#
		monthInd<-which(is.na(dat1$Month)==FALSE)#
		if(length(monthInd)>3) stop("Problem with monthInd: more than three months") else{#
			dat1$Month[1:(monthInd[2]-1)]<-c("January", "April", "July", "October")[j]#
			dat1$Month[monthInd[2]:(monthInd[3]-1)]<-c("February", "May", "August", "November")[j]#
			dat1$Month[monthInd[3]:maxLines]<-c("March", "June", "September", "December")[j]#
			}#
		dat1<-dat1[-monthInd,] # Remove the month lines that are blank#
		# Infill zones#
		zoneInd<-which(is.na(dat1$Fish_health_zone)==FALSE)#
		for(m in 1:length(zoneInd)){#
			if(m==length(zoneInd)) dat1$Fish_health_zone[zoneInd[m]:(dim(dat1)[1])]<-dat1$Fish_health_zone[zoneInd[m]] else dat1$Fish_health_zone[zoneInd[m]:(zoneInd[m+1]-1)]<-dat1$Fish_health_zone[zoneInd[m]]#
			}#
		dat1<-dat1[-zoneInd,] #Remove the lines with just the zones#
		# There was a problem with the HTML files that some comments ended up in multiple cells#
		# Find these comments and make them one cell#
		dat1$Comments<-as.character(dat1$Comments)#
		#Find gaps indicating comments spanning multipe rows#
		indNA<-which(is.na(dat1$Site_common_name)==TRUE)#
		# Select those indices that are the FIRST if there is a series of NAs#
		indNA2<-indNA[c(1,which(diff(indNA)>1)+1)]#
		# If the comment is NA, then it's just a dummy row and can be removed#
		if(sum(is.na(indNA2))>0) indNA2<-indNA2[is.na(indNA2)==FALSE]#
		if(length(indNA2)>0){#
			for(m in 1:length(indNA2)){#
				#---------#
				#If it's just one NA#
				if(is.na(dat1$Site_common_name[indNA2[m]+1])==FALSE){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], sep=" ")#
					}#
					dat1$Comments[indNA2[m]]<-NA#
				#-------#
				# if there are four NAs#
				}else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2,3)]))==3){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], dat1$Comments[indNA2[m]+3], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], dat1$Comments[indNA2[m]+3], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1,2,3)]<-NA#
				#-------#
				# if there are 3 NAs#
				} else if(sum(is.na(dat1$Site_common_name[indNA2[m]+c(1,2)]))==2){ #
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], dat1$Comments[indNA2[m]+2], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1,2)]<-NA#
				#-------#
				# if there are 2 NAs#
				} else if(is.na(dat1$Site_common_name[indNA2[m]+1])==TRUE){ # If there are 2 NAs#
					#If it's a number, needs to be converted back to date format#
					if(is.na(as.numeric(dat1$Comments[indNA2[m]-1]))==FALSE){ #
						dat1$Comments[indNA2[m]-1]<-paste(as.character(as.Date(as.numeric(dat1$Comments[indNA2[m]-1]), origin="1899-12-30")), dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], sep=" ")#
					}else{# if it's not a date, just compile them#
						dat1$Comments[indNA2[m]-1]<-paste(dat1$Comments[indNA2[m]-1], dat1$Comments[indNA2[m]], dat1$Comments[indNA2[m]+1], sep=" ")#
					}#
					dat1$Comments[indNA2[m]+c(0,1)]<-NA#
					}#
				}# end m#
			}#end if length#
		# Remove NA lines within data#
		naInd<-which(is.na(dat1$Site_common_name))#
		if(length(naInd)>0) dat1<-dat1[-naInd,]#
		# Compile dataframe#
		if(i==2011&j==1){ #If it's the first file in the dataset, start dataframe called allData,#
			allData<-dat1#
		}else{ # otherwise, add it to allData#
			allData<-rbind(allData, dat1)#
		}#
		rm(dat, dat1)#
	} # end j#
} # end i
warnings()
write.csv(allDat, "DFO_data_compiled.csv")
write.csv(allData, "DFO_data_compiled.csv")
getwd()
setwd("~/Google Drive/Lice database")
setwd("Farm-sea-lice-database") #Set working directory
write.csv(allData, "Data-processing/DFO_data_compiled.csv")
names(allData)
for(i in 1:16){#
	print(unique(allData[,i]))#
}
